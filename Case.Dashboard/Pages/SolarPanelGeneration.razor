@page "/SolarGeneration"

<PageTitle>Solar Generation</PageTitle>

@using Case.CoreFunctionality.Interfaces;
@using Case.CoreFunctionality.Models;
@inject ISolarPanelEfficiencyService solarService;

<h3>Solar Power</h3>
<p>This is the amount of power which the solar panel generated for today.</p>

@if (data == null || !data.Any())
{
    <div class="spinner-border" role="status"/>
} 
else
{
    <table class="table table-sm" style="width: 50%">
        <thead>
            <tr>
                <th>Time Of Day</th>
                <th>Generated Electricity (in KiloWatts)</th>
            </tr>
        </thead>
        <tbody>
            @for (var i = 5; i < 21; i++)
            {
                <tr>
                    <th>@GetTimeOnly(i)</th>
                    <th>@data.GetValueOrDefault(GetTimeOnly(i))</th>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    private Dictionary<TimeOnly, double>? data;

    private TimeOnly GetTimeOnly(int hour) => new TimeOnly(hour, 0);

    protected override async Task OnInitializedAsync()
    {
        data = data ?? await solarService.GetEfficiencyForTodayAsync();
    }
}
